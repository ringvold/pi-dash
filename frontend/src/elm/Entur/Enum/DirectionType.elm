-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Entur.Enum.DirectionType exposing (DirectionType(..), decoder, toString)

import Json.Decode as Decode exposing (Decoder)


type DirectionType
    = Unknown
    | Outbound
    | Inbound
    | Clockwise
    | Anticlockwise


decoder : Decoder DirectionType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "unknown" ->
                        Decode.succeed Unknown

                    "outbound" ->
                        Decode.succeed Outbound

                    "inbound" ->
                        Decode.succeed Inbound

                    "clockwise" ->
                        Decode.succeed Clockwise

                    "anticlockwise" ->
                        Decode.succeed Anticlockwise

                    _ ->
                        Decode.fail ("Invalid DirectionType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : DirectionType -> String
toString enum =
    case enum of
        Unknown ->
            "unknown"

        Outbound ->
            "outbound"

        Inbound ->
            "inbound"

        Clockwise ->
            "clockwise"

        Anticlockwise ->
            "anticlockwise"
