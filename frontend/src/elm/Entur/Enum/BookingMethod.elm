-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Entur.Enum.BookingMethod exposing (BookingMethod(..), decoder, toString)

import Json.Decode as Decode exposing (Decoder)


type BookingMethod
    = CallDriver
    | CallOffice
    | Online
    | Other
    | PhoneAtStop
    | Text
    | None


decoder : Decoder BookingMethod
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "callDriver" ->
                        Decode.succeed CallDriver

                    "callOffice" ->
                        Decode.succeed CallOffice

                    "online" ->
                        Decode.succeed Online

                    "other" ->
                        Decode.succeed Other

                    "phoneAtStop" ->
                        Decode.succeed PhoneAtStop

                    "text" ->
                        Decode.succeed Text

                    "none" ->
                        Decode.succeed None

                    _ ->
                        Decode.fail ("Invalid BookingMethod type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : BookingMethod -> String
toString enum =
    case enum of
        CallDriver ->
            "callDriver"

        CallOffice ->
            "callOffice"

        Online ->
            "online"

        Other ->
            "other"

        PhoneAtStop ->
            "phoneAtStop"

        Text ->
            "text"

        None ->
            "none"
