-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Entur.Enum.MultiModalMode exposing (MultiModalMode(..), decoder, toString)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Parent - Multi modal parent stop places without their mono modal children.
  - Child - Only mono modal children stop places, not their multi modal parent stop
  - All - Both multiModal parents and their mono modal child stop places.

-}
type MultiModalMode
    = Parent
    | Child
    | All


decoder : Decoder MultiModalMode
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "parent" ->
                        Decode.succeed Parent

                    "child" ->
                        Decode.succeed Child

                    "all" ->
                        Decode.succeed All

                    _ ->
                        Decode.fail ("Invalid MultiModalMode type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : MultiModalMode -> String
toString enum =
    case enum of
        Parent ->
            "parent"

        Child ->
            "child"

        All ->
            "all"
