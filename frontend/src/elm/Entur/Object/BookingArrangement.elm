-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Entur.Object.BookingArrangement exposing (bookWhen, bookingAccess, bookingContact, bookingMethods, bookingNote, buyWhen, latestBookingTime, minimumBookingPeriod, selection)

import Entur.Enum.BookingAccess
import Entur.Enum.BookingMethod
import Entur.Enum.PurchaseMoment
import Entur.Enum.PurchaseWhen
import Entur.InputObject
import Entur.Interface
import Entur.Object
import Entur.Scalar
import Entur.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Entur.Object.BookingArrangement
selection constructor =
    Object.selection constructor


{-| Who has access to book service?
-}
bookingAccess : Field (Maybe Entur.Enum.BookingAccess.BookingAccess) Entur.Object.BookingArrangement
bookingAccess =
    Object.fieldDecoder "bookingAccess" [] (Entur.Enum.BookingAccess.decoder |> Decode.nullable)


{-| How should service be booked?
-}
bookingMethods : Field (Maybe (List (Maybe Entur.Enum.BookingMethod.BookingMethod))) Entur.Object.BookingArrangement
bookingMethods =
    Object.fieldDecoder "bookingMethods" [] (Entur.Enum.BookingMethod.decoder |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| When should service be booked?
-}
bookWhen : Field (Maybe Entur.Enum.PurchaseWhen.PurchaseWhen) Entur.Object.BookingArrangement
bookWhen =
    Object.fieldDecoder "bookWhen" [] (Entur.Enum.PurchaseWhen.decoder |> Decode.nullable)


{-| Latest time service can be booked. ISO 8601 timestamp
-}
latestBookingTime : Field (Maybe Entur.Scalar.LocalTime) Entur.Object.BookingArrangement
latestBookingTime =
    Object.fieldDecoder "latestBookingTime" [] (Object.scalarDecoder |> Decode.map Entur.Scalar.LocalTime |> Decode.nullable)


{-| Minimum period in advance service can be booked as a ISO 8601 duration
-}
minimumBookingPeriod : Field (Maybe String) Entur.Object.BookingArrangement
minimumBookingPeriod =
    Object.fieldDecoder "minimumBookingPeriod" [] (Decode.string |> Decode.nullable)


{-| Textual description of booking arrangement for service
-}
bookingNote : Field (Maybe String) Entur.Object.BookingArrangement
bookingNote =
    Object.fieldDecoder "bookingNote" [] (Decode.string |> Decode.nullable)


{-| When should ticket be purchased?
-}
buyWhen : Field (Maybe (List (Maybe Entur.Enum.PurchaseMoment.PurchaseMoment))) Entur.Object.BookingArrangement
buyWhen =
    Object.fieldDecoder "buyWhen" [] (Entur.Enum.PurchaseMoment.decoder |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| Who should ticket be contacted for booking
-}
bookingContact : SelectionSet decodesTo Entur.Object.Contact -> Field (Maybe decodesTo) Entur.Object.BookingArrangement
bookingContact object_ =
    Object.selectionField "bookingContact" [] object_ (identity >> Decode.nullable)
