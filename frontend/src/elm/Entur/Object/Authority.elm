-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Entur.Object.Authority exposing (fareUrl, id, lang, lines, name, phone, selection, situations, timezone, url)

import Entur.InputObject
import Entur.Interface
import Entur.Object
import Entur.Scalar
import Entur.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Entur.Object.Authority
selection constructor =
    Object.selection constructor


{-| Authority id
-}
id : Field Entur.Scalar.Id Entur.Object.Authority
id =
    Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Entur.Scalar.Id)


name : Field String Entur.Object.Authority
name =
    Object.fieldDecoder "name" [] Decode.string


url : Field (Maybe String) Entur.Object.Authority
url =
    Object.fieldDecoder "url" [] (Decode.string |> Decode.nullable)


timezone : Field String Entur.Object.Authority
timezone =
    Object.fieldDecoder "timezone" [] Decode.string


lang : Field (Maybe String) Entur.Object.Authority
lang =
    Object.fieldDecoder "lang" [] (Decode.string |> Decode.nullable)


phone : Field (Maybe String) Entur.Object.Authority
phone =
    Object.fieldDecoder "phone" [] (Decode.string |> Decode.nullable)


fareUrl : Field (Maybe String) Entur.Object.Authority
fareUrl =
    Object.fieldDecoder "fareUrl" [] (Decode.string |> Decode.nullable)


lines : SelectionSet decodesTo Entur.Object.Line -> Field (List (Maybe decodesTo)) Entur.Object.Authority
lines object_ =
    Object.selectionField "lines" [] object_ (identity >> Decode.nullable >> Decode.list)


{-| Get all situations active for the authority
-}
situations : SelectionSet decodesTo Entur.Object.PtSituationElement -> Field (List (Maybe decodesTo)) Entur.Object.Authority
situations object_ =
    Object.selectionField "situations" [] object_ (identity >> Decode.nullable >> Decode.list)
