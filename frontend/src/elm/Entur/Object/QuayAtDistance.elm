-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Entur.Object.QuayAtDistance exposing (distance, id, quay, selection)

import Entur.InputObject
import Entur.Interface
import Entur.Object
import Entur.Scalar
import Entur.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Entur.Object.QuayAtDistance
selection constructor =
    Object.selection constructor


id : Field Entur.Scalar.Id Entur.Object.QuayAtDistance
id =
    Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map Entur.Scalar.Id)


quay : SelectionSet decodesTo Entur.Object.Quay -> Field (Maybe decodesTo) Entur.Object.QuayAtDistance
quay object_ =
    Object.selectionField "quay" [] object_ (identity >> Decode.nullable)


distance : Field (Maybe Int) Entur.Object.QuayAtDistance
distance =
    Object.fieldDecoder "distance" [] (Decode.int |> Decode.nullable)
