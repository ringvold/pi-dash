-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Object.TripPattern exposing (distance, duration, endTime, legs, selection, startTime, waitingTime, walkDistance, walkTime, weight)

import EnturApi.InputObject
import EnturApi.Interface
import EnturApi.Object
import EnturApi.Scalar
import EnturApi.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) EnturApi.Object.TripPattern
selection constructor =
    Object.selection constructor


{-| Time that the trip departs.
-}
startTime : Field (Maybe EnturApi.Scalar.DateTime) EnturApi.Object.TripPattern
startTime =
    Object.fieldDecoder "startTime" [] (Object.scalarDecoder |> Decode.map EnturApi.Scalar.DateTime |> Decode.nullable)


{-| Time that the trip arrives.
-}
endTime : Field (Maybe EnturApi.Scalar.DateTime) EnturApi.Object.TripPattern
endTime =
    Object.fieldDecoder "endTime" [] (Object.scalarDecoder |> Decode.map EnturApi.Scalar.DateTime |> Decode.nullable)


{-| Duration of the trip, in seconds.
-}
duration : Field (Maybe EnturApi.Scalar.Long) EnturApi.Object.TripPattern
duration =
    Object.fieldDecoder "duration" [] (Object.scalarDecoder |> Decode.map EnturApi.Scalar.Long |> Decode.nullable)


{-| How much time is spent waiting for transit to arrive, in seconds.
-}
waitingTime : Field (Maybe EnturApi.Scalar.Long) EnturApi.Object.TripPattern
waitingTime =
    Object.fieldDecoder "waitingTime" [] (Object.scalarDecoder |> Decode.map EnturApi.Scalar.Long |> Decode.nullable)


{-| Total distance for the trip, in meters.
-}
distance : Field (Maybe Float) EnturApi.Object.TripPattern
distance =
    Object.fieldDecoder "distance" [] (Decode.float |> Decode.nullable)


{-| How much time is spent walking, in seconds.
-}
walkTime : Field (Maybe EnturApi.Scalar.Long) EnturApi.Object.TripPattern
walkTime =
    Object.fieldDecoder "walkTime" [] (Object.scalarDecoder |> Decode.map EnturApi.Scalar.Long |> Decode.nullable)


{-| How far the user has to walk, in meters.
-}
walkDistance : Field (Maybe Float) EnturApi.Object.TripPattern
walkDistance =
    Object.fieldDecoder "walkDistance" [] (Decode.float |> Decode.nullable)


{-| A list of legs. Each leg is either a walking (cycling, car) portion of the trip, or a ride leg on a particular vehicle. So a trip where the use walks to the Q train, transfers to the 6, then walks to their destination, has four legs.
-}
legs : SelectionSet decodesTo EnturApi.Object.Leg -> Field (List (Maybe decodesTo)) EnturApi.Object.TripPattern
legs object_ =
    Object.selectionField "legs" [] object_ (identity >> Decode.nullable >> Decode.list)


{-| Weight of the itinerary. Used for debugging.
-}
weight : Field (Maybe Float) EnturApi.Object.TripPattern
weight =
    Object.fieldDecoder "weight" [] (Decode.float |> Decode.nullable)
