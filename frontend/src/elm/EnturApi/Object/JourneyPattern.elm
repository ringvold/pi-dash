-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Object.JourneyPattern exposing (ServiceJourneysForDateOptionalArguments, destinationDisplay, directionType, id, line, name, notices, pointsOnLink, quays, selection, serviceJourneys, serviceJourneysForDate, situations)

import EnturApi.Enum.DirectionType
import EnturApi.InputObject
import EnturApi.Interface
import EnturApi.Object
import EnturApi.Scalar
import EnturApi.Union
import Graphql.Field as Field exposing (Field)
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) EnturApi.Object.JourneyPattern
selection constructor =
    Object.selection constructor


id : Field EnturApi.Scalar.Id EnturApi.Object.JourneyPattern
id =
    Object.fieldDecoder "id" [] (Object.scalarDecoder |> Decode.map EnturApi.Scalar.Id)


line : SelectionSet decodesTo EnturApi.Object.Line -> Field decodesTo EnturApi.Object.JourneyPattern
line object_ =
    Object.selectionField "line" [] object_ identity


directionType : Field (Maybe EnturApi.Enum.DirectionType.DirectionType) EnturApi.Object.JourneyPattern
directionType =
    Object.fieldDecoder "directionType" [] (EnturApi.Enum.DirectionType.decoder |> Decode.nullable)


name : Field (Maybe String) EnturApi.Object.JourneyPattern
name =
    Object.fieldDecoder "name" [] (Decode.string |> Decode.nullable)


destinationDisplay : SelectionSet decodesTo EnturApi.Object.DestinationDisplay -> Field (Maybe decodesTo) EnturApi.Object.JourneyPattern
destinationDisplay object_ =
    Object.selectionField "destinationDisplay" [] object_ (identity >> Decode.nullable)


serviceJourneys : SelectionSet decodesTo EnturApi.Object.ServiceJourney -> Field (List decodesTo) EnturApi.Object.JourneyPattern
serviceJourneys object_ =
    Object.selectionField "serviceJourneys" [] object_ (identity >> Decode.list)


type alias ServiceJourneysForDateOptionalArguments =
    { date : OptionalArgument EnturApi.Scalar.Date }


{-| List of service journeys for the journey pattern for a given date
-}
serviceJourneysForDate : (ServiceJourneysForDateOptionalArguments -> ServiceJourneysForDateOptionalArguments) -> SelectionSet decodesTo EnturApi.Object.ServiceJourney -> Field (List decodesTo) EnturApi.Object.JourneyPattern
serviceJourneysForDate fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { date = Absent }

        optionalArgs =
            [ Argument.optional "date" filledInOptionals.date (\(EnturApi.Scalar.Date raw) -> Encode.string raw) ]
                |> List.filterMap identity
    in
    Object.selectionField "serviceJourneysForDate" optionalArgs object_ (identity >> Decode.list)


{-| Quays visited by service journeys for this journey patterns
-}
quays : SelectionSet decodesTo EnturApi.Object.Quay -> Field (List decodesTo) EnturApi.Object.JourneyPattern
quays object_ =
    Object.selectionField "quays" [] object_ (identity >> Decode.list)


pointsOnLink : SelectionSet decodesTo EnturApi.Object.PointsOnLink -> Field (Maybe decodesTo) EnturApi.Object.JourneyPattern
pointsOnLink object_ =
    Object.selectionField "pointsOnLink" [] object_ (identity >> Decode.nullable)


{-| Get all situations active for the journey pattern
-}
situations : SelectionSet decodesTo EnturApi.Object.PtSituationElement -> Field (List (Maybe decodesTo)) EnturApi.Object.JourneyPattern
situations object_ =
    Object.selectionField "situations" [] object_ (identity >> Decode.nullable >> Decode.list)


notices : SelectionSet decodesTo EnturApi.Object.Notice -> Field (List (Maybe decodesTo)) EnturApi.Object.JourneyPattern
notices object_ =
    Object.selectionField "notices" [] object_ (identity >> Decode.nullable >> Decode.list)
