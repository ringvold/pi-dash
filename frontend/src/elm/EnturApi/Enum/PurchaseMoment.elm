-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module EnturApi.Enum.PurchaseMoment exposing (PurchaseMoment(..), decoder, toString)

import Json.Decode as Decode exposing (Decoder)


type PurchaseMoment
    = OnReservation
    | BeforeBoarding
    | OnBoarding
    | AfterBoarding
    | OnCheckOut
    | Other


decoder : Decoder PurchaseMoment
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "onReservation" ->
                        Decode.succeed OnReservation

                    "beforeBoarding" ->
                        Decode.succeed BeforeBoarding

                    "onBoarding" ->
                        Decode.succeed OnBoarding

                    "afterBoarding" ->
                        Decode.succeed AfterBoarding

                    "onCheckOut" ->
                        Decode.succeed OnCheckOut

                    "other" ->
                        Decode.succeed Other

                    _ ->
                        Decode.fail ("Invalid PurchaseMoment type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : PurchaseMoment -> String
toString enum =
    case enum of
        OnReservation ->
            "onReservation"

        BeforeBoarding ->
            "beforeBoarding"

        OnBoarding ->
            "onBoarding"

        AfterBoarding ->
            "afterBoarding"

        OnCheckOut ->
            "onCheckOut"

        Other ->
            "other"
